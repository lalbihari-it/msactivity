package com.ibm.vicky.currency.service.controller;

import java.math.BigDecimal;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.ibm.vicky.currency.service.model.CurrencyConversion;
import com.ibm.vicky.currency.service.service.CurrencyConversionService;

@RestController
public class CurrencyConversionController {
	
	@Autowired
	CurrencyConversionService service;
	
	//Directly calling other MS 
	@RequestMapping(value="/convertCurrency/v1" , method=RequestMethod.POST)
	public BigDecimal convertCurrency(@RequestBody CurrencyConversion curCon) {
		
		return service.calcCurrencyConversionV2(curCon);
		
	}
	
	//Directly calling other MS 
		@RequestMapping(value="/convertCurrency/v2" , method=RequestMethod.POST)
		public BigDecimal convertCurrencyV2(@RequestBody CurrencyConversion curCon) {
			
			return service.calcCurrencyConversionV2(curCon);
			
		}
		
		//FeignClient
	
	@RequestMapping(value="/convertCurrency/v3" , method=RequestMethod.POST)
	public BigDecimal convertCurrencyV3(@RequestBody CurrencyConversion curCon) {
		return service.calcCurrencyConversionV3(curCon);
	}
	
	//Load balancer -Ribbon
	
	@RequestMapping(value="/convertCurrency/v4" , method=RequestMethod.POST)
	public BigDecimal convertCurrencyV4(@RequestBody CurrencyConversion curCon) {
		
		return service.calcCurrencyConversionV4(curCon);
		
	}
	
	//Load balancer -Ribbon - REST Template
	
	@RequestMapping(value="/convertCurrency/v5" , method=RequestMethod.POST)
	public BigDecimal convertCurrencyV5(@RequestBody CurrencyConversion curCon) {
		
		return service.calcCurrencyConversionV5(curCon);
		
	}
	
	//Hystrix Circuit Breaker
	
	@RequestMapping(value="/convertCurrency/v6" , method=RequestMethod.POST)
	public BigDecimal convertCurrencyV6(@RequestBody CurrencyConversion curCon) {
		
		return service.calcCurrencyConversionV6(curCon);
		
	}
	

}
